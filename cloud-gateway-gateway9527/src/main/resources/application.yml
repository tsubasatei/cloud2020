server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
          - id: payment_routh   # payment_routh 路由器ID，没有固定规则但要求唯一，建议配合服务名
#            uri: http://localhost:8001   # 匹配后提供服务的路由地址
            uri: lb://cloud-payment-service # 匹配后提供服务的路由地址
            predicates:
              - Path=/payment/get/**     # 断言，路径相匹配的进行路由

          - id: payment_routh2   # payment_routh 路由器ID，没有固定规则但要求唯一，建议配合服务名
#            uri: http://localhost:8001   # 匹配后提供服务的路由地址
            uri: lb://cloud-payment-service # 匹配后提供服务的路由地址
            predicates:
              - Path=/payment/lb/**     # 断言，路径相匹配的进行路由
              - After=2020-03-15T18:36:54.654+08:00[Asia/Shanghai]
#              - Before=2020-03-15T20:36:54.654+08:00[Asia/Shanghai]
#              - Between=2020-03-15T18:36:54.654+08:00[Asia/Shanghai],2020-03-15T21:36:54.654+08:00[Asia/Shanghai]
#              - Cookie=username,xt
#              - Header=X-Request-Id, \d+ # 请求头要有X-Request-Id属性并且值为正数的正则表达式
#              - Host=**.xt.com
              - Method=Get,POST
#              - Query=username, \d+ # 要有参数名username并且还要是正数才能路由

#            filters:
#              - AddRequestParameter=X-Request-Id,1024 # 过滤器工厂会在匹配的请求头加上一对请求头，名称为-Request-Id值为1024
eureka:
  client:
    register-with-eureka: true # 表示是否将自己注册进EurekaServer 默认为 true
    fetch-registry: true # 是否从 EurekaServer 抓取已有的注册信息，默认 true，单节点无所谓，集群设置为true才能配合Ribbon使用负载均衡
    service-url:
      defaultZone: http://localhost:7001/eureka  # 单机版
  instance:
    hostname: cloud-gateway-service